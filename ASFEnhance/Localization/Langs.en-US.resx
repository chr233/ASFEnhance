<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AreaItem" xml:space="preserve">
    <value> {0} | {1}</value>
  </data>
  <data name="AreaItemCurrent" xml:space="preserve">
    <value> {0} | {1} | *</value>
  </data>
  <data name="AvailableAreaHeader" xml:space="preserve">
    <value>Country Code | Country Name | Current</value>
  </data>
  <data name="CartEmptyResponse" xml:space="preserve">
    <value>Response is empty</value>
  </data>
  <data name="CartInvalidType" xml:space="preserve">
    <value>{0}: Invalid type [SUB|BUNDLE]</value>
  </data>
  <data name="CartIsEmpty" xml:space="preserve">
    <value>Shopping cart is empty</value>
  </data>
  <data name="CartItemInfo" xml:space="preserve">
    <value>{0} {1} {2:F2}</value>
  </data>
  <data name="CartNetworkError" xml:space="preserve">
    <value>Network Error</value>
  </data>
  <data name="CartPurchaseGift" xml:space="preserve">
    <value>Purchase as a gift: {0}</value>
  </data>
  <data name="CartPurchaseSelf" xml:space="preserve">
    <value>Purchase for myself: {0}</value>
  </data>
  <data name="CartResetResult" xml:space="preserve">
    <value>Remove all items from your shopping cart: {0}</value>
  </data>
  <data name="CartTotalPrice" xml:space="preserve">
    <value>Estimated total: {0:F2} {1}</value>
  </data>
  <data name="ClientCookies" xml:space="preserve">
    <value>Steam StoreCookies:</value>
  </data>
  <data name="CookieItem" xml:space="preserve">
    <value>{0} : {1}</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Failure" xml:space="preserve">
    <value>Failure</value>
  </data>
  <data name="GameInvalidType" xml:space="preserve">
    <value>{0} Invalid type [APP|SUB|BUNDLE]</value>
  </data>
  <data name="GetProfileFailed" xml:space="preserve">
    <value>Get profile info failed</value>
  </data>
  <data name="GetStoreNameFailed" xml:space="preserve">
    <value>Get game name failed</value>
  </data>
  <data name="KeyNotFound" xml:space="preserve">
    <value>No key is recognized</value>
  </data>
  <data name="NoAvailableArea" xml:space="preserve">
    <value>No available country choices, will use wallet's default currency</value>
  </data>
  <data name="Offline" xml:space="preserve">
    <value>Offline</value>
  </data>
  <data name="Online" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="PluginContact" xml:space="preserve">
    <value>Developed by Chr_, email chr@chrxw.com</value>
  </data>
  <data name="PluginVer" xml:space="preserve">
    <value>ASFEnhance {0}.{1}.{2} build {3}</value>
  </data>
  <data name="ProfileBadges" xml:space="preserve">
    <value>Badges: {0}</value>
  </data>
  <data name="ProfileFriends" xml:space="preserve">
    <value>Friends: {0}</value>
  </data>
  <data name="ProfileGames" xml:space="preserve">
    <value>Games: {0}</value>
  </data>
  <data name="ProfileGroups" xml:space="preserve">
    <value>Groups: {0}</value>
  </data>
  <data name="ProfileGuide" xml:space="preserve">
    <value>Guides: {0}</value>
  </data>
  <data name="ProfileHeader" xml:space="preserve">
    <value>Steam Profile:</value>
  </data>
  <data name="ProfileImages" xml:space="preserve">
    <value>Images: {0}</value>
  </data>
  <data name="ProfileLevel" xml:space="preserve">
    <value>Level: {0}</value>
  </data>
  <data name="ProfileNickname" xml:space="preserve">
    <value>Nickname: {0}</value>
  </data>
  <data name="ProfileRecommended" xml:space="preserve">
    <value>Reviews: {0}</value>
  </data>
  <data name="ProfileScreenshots" xml:space="preserve">
    <value>Screenshots: {0}</value>
  </data>
  <data name="ProfileState" xml:space="preserve">
    <value>State: {0}</value>
  </data>
  <data name="ProfileVideos" xml:space="preserve">
    <value>Videos: {0}</value>
  </data>
  <data name="ProfileWorkshop" xml:space="preserve">
    <value>Workshop items: {0}</value>
  </data>
  <data name="PurchaseCartFailureEmpty" xml:space="preserve">
    <value>Shopping cart is empty and no checkout is required</value>
  </data>
  <data name="PurchaseCartFailureFinalizeTransactionIsNull" xml:space="preserve">
    <value>Purchase failed, "FinalizeTransaction" is Null</value>
  </data>
  <data name="PurchaseCartGetFinalPriceIsNull" xml:space="preserve">
    <value>Purchase failed, "GetFinalPrice" returns Null</value>
  </data>
  <data name="PurchaseCartTransIDIsNull" xml:space="preserve">
    <value>Purchase failed, "transID" is Null</value>
  </data>
  <data name="PurchaseDone" xml:space="preserve">
    <value>Purchase done, all coasts: {0}</value>
  </data>
  <data name="SetCurrentCountry" xml:space="preserve">
    <value>Set billing address: {0}</value>
  </data>
  <data name="StoreItem" xml:space="preserve">
    <value>{0}/{1} {2} {3:F2} {4}</value>
  </data>
  <data name="StoreItemHeader" xml:space="preserve">
    <value>{0}/{1}: {2}</value>
  </data>
  <data name="StorePageNotFound" xml:space="preserve">
    <value>Store page not found</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="WalletAreaUnknown" xml:space="preserve">
    <value>Unknown wallet area</value>
  </data>
  <data name="EventReadBadgeStatusFailed" xml:space="preserve">
    <value>Read vote status failed</value>
  </data>
  <data name="EventVoteResponse" xml:space="preserve">
    <value>Steam Award Vote: {0} / {1}</value>
  </data>
  <data name="RecommendPublishFailed" xml:space="preserve">
    <value>Recommend publish failed: {0}</value>
  </data>
  <data name="RecommendPublishSuccess" xml:space="preserve">
    <value>Recommend publish successful</value>
  </data>
  <data name="JoinGroup" xml:space="preserve">
    <value>Join the Group: {0}</value>
  </data>
  <data name="GroupListEmpty" xml:space="preserve">
    <value>Group list is empty</value>
  </data>
  <data name="EventClaimItem" xml:space="preserve">
    <value>Claim daily stickers: {0}</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="EventQueue" xml:space="preserve">
    <value>Finish queue: {0}</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PurchaseFailed" xml:space="preserve">
    <value>Purchase failed, your wallet balance won't change.</value>
  </data>
</root>
